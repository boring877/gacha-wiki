name: Discord Notification

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get enhanced commit info
        id: commit
        run: |
          # Get commit details
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an")
          COMMIT_EMAIL=$(git log -1 --pretty=format:"%ae")
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          COMMIT_SHORT_SHA=$(git rev-parse --short ${{ github.sha }})

          # Get file change stats
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | wc -l)
          INSERTIONS=$(git diff --shortstat HEAD~1 HEAD | grep -oE '[0-9]+ insertion' | grep -oE '[0-9]+' || echo "0")
          DELETIONS=$(git diff --shortstat HEAD~1 HEAD | grep -oE '[0-9]+ deletion' | grep -oE '[0-9]+' || echo "0")

          # Determine commit type and color
          if [[ "$COMMIT_MESSAGE" =~ ^(feat|feature|add|new) ]]; then
            COMMIT_TYPE="üöÄ"
            COLOR="3066993"  # Green
          elif [[ "$COMMIT_MESSAGE" =~ ^(fix|bug|patch) ]]; then
            COMMIT_TYPE="üêõ"
            COLOR="15158332"  # Red
          elif [[ "$COMMIT_MESSAGE" =~ ^(docs|doc|readme) ]]; then
            COMMIT_TYPE="üìù"
            COLOR="3447003"  # Blue
          elif [[ "$COMMIT_MESSAGE" =~ ^(style|format|ui|css) ]]; then
            COMMIT_TYPE="üíÑ"
            COLOR="10181046"  # Purple
          elif [[ "$COMMIT_MESSAGE" =~ ^(refactor|clean|optimize) ]]; then
            COMMIT_TYPE="‚ôªÔ∏è"
            COLOR="15844367"  # Gold
          elif [[ "$COMMIT_MESSAGE" =~ ^(test|spec) ]]; then
            COMMIT_TYPE="‚úÖ"
            COLOR="65280"  # Lime
          else
            COMMIT_TYPE="üì¶"
            COLOR="3447003"  # Default blue
          fi

          # Save outputs
          echo "message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT
          echo "email=$COMMIT_EMAIL" >> $GITHUB_OUTPUT
          echo "url=$COMMIT_URL" >> $GITHUB_OUTPUT
          echo "short_sha=$COMMIT_SHORT_SHA" >> $GITHUB_OUTPUT
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "insertions=$INSERTIONS" >> $GITHUB_OUTPUT
          echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT
          echo "commit_type=$COMMIT_TYPE" >> $GITHUB_OUTPUT
          echo "color=$COLOR" >> $GITHUB_OUTPUT

      - name: Send enhanced Discord notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "$DISCORD_WEBHOOK_URL" ]; then
            echo "DISCORD_WEBHOOK_URL secret not set"
            exit 1
          fi

          # Create file change summary
          if [ "${{ steps.commit.outputs.changed_files }}" -eq "1" ]; then
            FILE_SUMMARY="1 file changed"
          else
            FILE_SUMMARY="${{ steps.commit.outputs.changed_files }} files changed"
          fi

          if [ "${{ steps.commit.outputs.insertions }}" -gt "0" ] || [ "${{ steps.commit.outputs.deletions }}" -gt "0" ]; then
            FILE_SUMMARY="$FILE_SUMMARY (+${{ steps.commit.outputs.insertions }} -${{ steps.commit.outputs.deletions }})"
          fi

          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "embeds": [{
                   "title": "${{ steps.commit.outputs.commit_type }} Gacha Wiki - New Push",
                   "description": "${{ steps.commit.outputs.message }}",
                   "color": ${{ steps.commit.outputs.color }},
                   "fields": [
                     {
                       "name": "üë§ Author",
                       "value": "${{ steps.commit.outputs.author }}",
                       "inline": true
                     },
                     {
                       "name": "üîß Commit",
                       "value": "['${{ steps.commit.outputs.short_sha }}'](https://github.com/${{ github.repository }}/commit/${{ github.sha }})",
                       "inline": true
                     },
                     {
                       "name": "üåø Branch",
                       "value": "${{ github.ref_name }}",
                       "inline": true
                     },
                     {
                       "name": "üìÅ Changes",
                       "value": "'"$FILE_SUMMARY"'",
                       "inline": false
                     }
                   ],
                   "footer": {
                     "text": "gachawiki.info ‚Ä¢ ${{ github.repository }}",
                     "icon_url": "https://github.com/boring877.png"
                   },
                   "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'",
                   "url": "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
                 }]
               }' \
               "$DISCORD_WEBHOOK_URL"
