---
import CharacterComparisonV2Layout from '../../../layouts/silver-and-blood/CharacterComparisonV2Layout.astro';
import CharacterComparisonV2Logic from '../../../components/silver-and-blood/CharacterComparisonV2Logic.astro';
import SABCharacterImage from '../../../components/silver-and-blood/SABCharacterImage.astro';
import { characters } from '../../../data/silver-and-blood/characters.js';

const title = 'Character Comparison Tool V2 - Silver and Blood';
const description =
  'Advanced Silver and Blood character comparison tool. Compare 2 heroes side-by-side: combat stats (HP/ATK/P.DEF/M.DEF), tier rankings, skills, team synergies. Filter by class, faction, moon phase, equipment type. Optimize team composition with data-driven insights for all game modes.';

// Security: Sanitize character data to prevent XSS
function escapeHtml(unsafe: string): string {
  return unsafe
    .replace(/&/g, '&')
    .replace(/</g, '<')
    .replace(/>/g, '>')
    .replace(/"/g, '"')
    .replace(/'/g, '&#039;');
}

// Security: Validate image URLs
function isValidImageUrl(url: string): boolean {
  return (
    /^https?:\/\/[^\s<>"']+\.(jpg|jpeg|png|gif|webp)$/i.test(url) ||
    /^\/[^\s<>"']+\.(jpg|jpeg|png|gif|webp)$/i.test(url)
  );
}

// Security: Sanitize and validate character data
// Keep original names for data lookups, only escape for display
const sanitizedCharacters = characters.map(char => ({
  ...char,
  originalName: char.name || '', // Keep original for tier lookups
  displayName: escapeHtml(char.name || ''), // Escaped version for display
  slug: char.id?.replace(/[^a-zA-Z0-9-_]/g, '') || '', // Use id as slug
  class: escapeHtml(char.class || ''),
  rarity: escapeHtml(char.rarity || ''),
  faction: escapeHtml(char.faction || ''),
  equipmentType: escapeHtml(char.equipmentType || ''),
  moonPhase: escapeHtml(char.moonPhase || ''),
  attackType: escapeHtml(char.attackType || ''),
  image: isValidImageUrl(char.image || '') ? char.image : '/images/placeholder.png',
}));

// Get unique values for filters
const classes = [...new Set(characters.map(c => c.class).filter(Boolean))].sort();
const factions = [...new Set(characters.map(c => c.faction).filter(Boolean))].sort();
const equipmentTypes = [...new Set(characters.map(c => c.equipmentType).filter(Boolean))].sort();
const moonPhases = [...new Set(characters.map(c => c.moonPhase).filter(Boolean))].sort();
const attackTypes = [...new Set(characters.map(c => c.attackType).filter(Boolean))].sort();
const rarities = ['SSR', 'SR', 'R'];
---

<CharacterComparisonV2Layout title={title} description={description}>
  <div class="comparison-v2-page-content">
    <!-- Page Header Section -->
    <div class="page-header-section">
      <h1 style="display: none;">Silver & Blood Character Comparison Tool V2</h1>
      <div class="seo-keywords" style="display: none;">
        Silver and Blood character comparison, hero stats comparison, tier list rankings, PvE PvP
        analysis, team building guide, character skills breakdown, combat stats analysis, gacha game
        strategy
      </div>

      <!-- Usage Tips -->
      <div class="usage-tips">
        <h3>How to Use</h3>
        <ul>
          <li>
            <strong>Desktop:</strong> Click character icons to select up to 2 heroes for comparison
          </li>
          <li><strong>Mobile:</strong> Tap character selection buttons to open modal picker</li>
          <li>
            Use filters to find specific characters by class, faction, rarity, equipment, moon
            phase, or attack type
          </li>
          <li>Compare stats, tier rankings, and skills in the comparison cards below</li>
        </ul>
      </div>
    </div>

    <!-- Character Selection Header - Icon Bar -->
    <div class="character-deck-header">
      <div class="deck-header-container">
        <!-- Header with Character Icons -->
        <div class="deck-header-main">
          <!-- Row 1: Title and Selected Count -->
          <div class="deck-header-title-row">
            <h2 class="deck-title">Character Comparison V2</h2>
            <span class="selected-count" id="v2-selected-count">0/2 selected</span>
          </div>

          <!-- Row 2: Filters and Controls -->
          <div class="deck-header-controls-row">
            <div class="deck-header-controls">
              <!-- Filters -->
              <div class="deck-filters-compact">
                <select class="filter-select-compact" id="v2-class-filter">
                  <option value="">All Classes</option>
                  {classes.map(classOption => <option value={classOption}>{classOption}</option>)}
                </select>

                <select class="filter-select-compact" id="v2-faction-filter">
                  <option value="">All Factions</option>
                  {factions.map(faction => <option value={faction}>{faction}</option>)}
                </select>

                <select class="filter-select-compact" id="v2-rarity-filter">
                  <option value="">All Rarities</option>
                  {rarities.map(rarity => <option value={rarity}>{rarity}</option>)}
                </select>

                <select class="filter-select-compact" id="v2-equipment-filter">
                  <option value="">All Equipment</option>
                  {equipmentTypes.map(equipType => <option value={equipType}>{equipType}</option>)}
                </select>

                <select class="filter-select-compact" id="v2-moon-filter">
                  <option value="">All Phases</option>
                  {moonPhases.map(phase => <option value={phase}>{phase}</option>)}
                </select>

                <select class="filter-select-compact" id="v2-attack-filter">
                  <option value="">All Types</option>
                  {attackTypes.map(attackType => <option value={attackType}>{attackType}</option>)}
                </select>
              </div>
              <div class="button-group">
                <button class="reset-filters-btn" id="v2-reset-filters">Reset</button>
                <button class="clear-all-btn" id="v2-clear-all">Clear All</button>
              </div>
            </div>
          </div>

          <!-- Row 3: Character Selection Area -->

          <!-- Character Selection - Icons for Desktop, Dropdown for Mobile -->
          <div class="character-selection-area">
            <!-- Character Icons Strip (Desktop) -->
            <div class="character-icons-strip desktop-only">
              <div class="character-icons-container" id="v2-character-icons">
                {
                  sanitizedCharacters.map(character => (
                    <div
                      class="character-icon"
                      data-character-slug={character.slug}
                      data-class={character.class}
                      data-rarity={character.rarity}
                      data-faction={character.faction}
                      data-equipment={character.equipmentType}
                      data-moon={character.moonPhase}
                      data-attack={character.attackType}
                      title={`${character.originalName} (${character.rarity} ${character.faction} ${character.class})`}
                      role="button"
                      tabindex="0"
                      aria-label={`Select ${character.originalName}, ${character.rarity} ${character.faction} ${character.class}`}
                    >
                      <SABCharacterImage
                        imageName={character.slug}
                        alt={character.originalName}
                        class="character-icon-img"
                        width={144}
                        height={144}
                        loading="lazy"
                        format="jpg"
                        quality={100}
                      />
                      <span class="character-icon-name" set:html={character.displayName} />
                    </div>
                  ))
                }
              </div>
            </div>

            <!-- Character Selection Buttons (Mobile) -->
            <div class="character-selection-area mobile-only">
              <div class="character-selection-row">
                <div class="character-selection-slot">
                  <label class="character-slot-label">Character 1:</label>
                  <button class="character-selection-button" id="v2-mobile-select-1" data-slot="1">
                    <div class="selection-button-content" id="v2-mobile-display-1">
                      <div class="selection-placeholder">
                        <span class="selection-icon">+</span>
                        <span class="selection-text">Select Character 1</span>
                      </div>
                    </div>
                  </button>
                </div>
                <div class="character-selection-slot">
                  <label class="character-slot-label">Character 2:</label>
                  <button class="character-selection-button" id="v2-mobile-select-2" data-slot="2">
                    <div class="selection-button-content" id="v2-mobile-display-2">
                      <div class="selection-placeholder">
                        <span class="selection-icon">+</span>
                        <span class="selection-text">Select Character 2</span>
                      </div>
                    </div>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Comparison Container - Full Width -->
    <div class="comparison-container-external">
      <div class="comparison-container">
        <div class="comparison-header">
          <h2 class="comparison-title">Character Comparison</h2>
        </div>

        <!-- Selected Characters Display -->
        <div class="selected-characters-area" id="v2-selected-area">
          <div class="empty-comparison-message" id="v2-empty-message">
            <p>Select characters from the deck to start comparing</p>
            <small>You can compare up to 2 characters at once</small>
          </div>
        </div>

        <!-- Comparison Cards Container -->
        <div class="comparison-cards-container hidden" id="v2-comparison-container">
          <div class="comparison-cards-grid" id="v2-cards-grid">
            <!-- Character cards will be dynamically inserted here -->
          </div>
        </div>
      </div>
    </div>

    <!-- Mobile Character Selection Modal -->
    <div class="mobile-character-modal" id="v2-mobile-modal">
      <div class="modal-backdrop" id="v2-modal-backdrop"></div>
      <div class="modal-container">
        <div class="modal-header">
          <h3 class="modal-title" id="v2-modal-title">Select Character</h3>
          <button
            class="modal-close-btn"
            id="v2-modal-close"
            aria-label="Close character selection"
          >
            <span>×</span>
          </button>
        </div>

        <div class="modal-search-bar">
          <input
            type="text"
            class="modal-search-input"
            id="v2-modal-search"
            placeholder="Search characters..."
            autocomplete="off"
          />
        </div>

        <div class="modal-character-grid" id="v2-modal-character-grid">
          {
            sanitizedCharacters.map(character => (
              <div
                class="modal-character-card"
                data-character-slug={character.slug}
                data-class={character.class}
                data-rarity={character.rarity}
                data-faction={character.faction}
                data-equipment={character.equipmentType}
                data-moon={character.moonPhase}
                data-attack={character.attackType}
                role="button"
                tabindex="0"
                aria-label={`Select ${character.originalName}, ${character.rarity} ${character.faction} ${character.class}`}
              >
                <SABCharacterImage
                  imageName={character.slug}
                  alt={character.originalName}
                  class="modal-character-image"
                  width={320}
                  height={320}
                  loading="lazy"
                  format="jpg"
                  quality={100}
                />
                <div class="modal-character-info">
                  <span class="modal-character-name" set:html={character.displayName} />
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>

  <!-- Character Comparison V2 Logic Component -->
  <CharacterComparisonV2Logic />
</CharacterComparisonV2Layout>
