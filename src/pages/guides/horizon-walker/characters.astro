---
import { Image } from 'astro:assets';
import CharacterLayout from '../../../layouts/horizon-walker/CharacterLayout.astro';
import Breadcrumb from '../../../components/horizon-walker/Breadcrumb.astro';
import {
  HORIZON_WALKER_CHARACTERS,
  gameInfo,
  getTagCategory,
} from '../../../data/horizon-walker/characters.js';
import {
  getStrengthValue,
  getIntelligenceValue,
  getVitalityValue,
  getAgilityValue,
  getTechnicValue,
} from '../../../utils/horizon-walker/character-table-utils.js';

// Extract filter options from enhanced data structure
const { rarities } = gameInfo;

// Breadcrumb data for SEO
const breadcrumbs = [
  { name: 'Home', href: '/' },
  { name: 'Horizon Walker', href: '/guides/horizon-walker/' },
  { name: 'Characters' },
];

// Calculate enhanced stats for display
const totalCharacters = HORIZON_WALKER_CHARACTERS.length;
const exCount = HORIZON_WALKER_CHARACTERS.filter(char => char.rarity === 'EX').length;
const ssCount = HORIZON_WALKER_CHARACTERS.filter(char => char.rarity === 'SS').length;
const sCount = HORIZON_WALKER_CHARACTERS.filter(char => char.rarity === 'S').length;
const aCount = HORIZON_WALKER_CHARACTERS.filter(char => char.rarity === 'A').length;
const bCount = HORIZON_WALKER_CHARACTERS.filter(char => char.rarity === 'B').length;

// SEO metadata
const title = 'Horizon Walker Characters Database - All Heroes & Waifus List 2025 | GachaWiki';
const description = `Explore all ${totalCharacters} Horizon Walker characters including ${exCount} EX, ${ssCount} SS, ${sCount} S, ${aCount} A, ${bCount} B rarity heroes. Complete database with stats, costs, classes, elements, and factions. Advanced filtering and mobile-optimized interface.`;
---

<CharacterLayout
  title={title}
  description={description}
  gameTitle="Character Database"
  showBackButton={false}
>
  <!-- Breadcrumb Navigation -->
  <Breadcrumb items={breadcrumbs} />

  <section class="hw-char-db-page-flex">
    <div class="hw-char-db-main-content">
      <div class="hw-char-db-content-wrapper">
        <!-- Enhanced filter bar with integrated stats -->
        <div class="filter-bar">
          <!-- Controls Section -->
          <div class="filter-controls-section">
            <!-- Stats Info Row -->
            <div class="filter-stats-row">
              <div class="stats-info-section">
                <p class="hw-char-db-subtitle">
                  All stats shown at max level (Level {gameInfo.maxLevel})
                </p>

                <!-- Character rarity stats -->
                <div class="hw-char-db-stats-summary">
                  <span class="hw-badge" data-rarity="EX">{exCount} EX</span>
                  <span class="hw-badge" data-rarity="SS">{ssCount} SS</span>
                  <span class="hw-badge" data-rarity="S">{sCount} S</span>
                  <span class="hw-badge" data-rarity="A">{aCount} A</span>
                  <span class="hw-badge" data-rarity="B">{bCount} B</span>
                </div>
              </div>
            </div>

            <!-- Reset Row -->
            <div class="filter-reset-row">
              <button type="button" id="reset-table" class="reset-button"> Reset All </button>
            </div>

            <!-- Filters Left, Sorting Right -->
            <div class="filter-controls-row">
              <div class="filter-left-section">
                <div class="filter-section">
                  <label class="filter-label" for="rarity-filter">Filter by Rarity</label>
                  <select
                    id="rarity-filter"
                    class="filter-select"
                    data-filter="rarity"
                    class="touch-optimized"
                  >
                    <option value="">All Rarities</option>
                    {rarities.map(rarity => <option value={rarity}>{rarity}</option>)}
                  </select>
                </div>
              </div>

              <div class="sort-right-section">
                <label class="filter-label">Sort by</label>
                <div class="sort-buttons-single-row">
                  <button
                    class="sort-btn sort-btn--compact"
                    data-sort="cost"
                    class="touch-optimized"
                  >
                    Cost <span class="sort-indicator"></span>
                  </button>
                  <button
                    class="sort-btn sort-btn--compact"
                    data-sort="strength"
                    class="touch-optimized"
                  >
                    STR <span class="sort-indicator"></span>
                  </button>
                  <button
                    class="sort-btn sort-btn--compact"
                    data-sort="intelligence"
                    class="touch-optimized"
                  >
                    INT <span class="sort-indicator"></span>
                  </button>
                  <button
                    class="sort-btn sort-btn--compact"
                    data-sort="vitality"
                    class="touch-optimized"
                  >
                    VIT <span class="sort-indicator"></span>
                  </button>
                  <button
                    class="sort-btn sort-btn--compact"
                    data-sort="agility"
                    class="touch-optimized"
                  >
                    AGI <span class="sort-indicator"></span>
                  </button>
                  <button
                    class="sort-btn sort-btn--compact"
                    data-sort="technic"
                    class="touch-optimized"
                  >
                    TEC <span class="sort-indicator"></span>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Desktop table container with touch optimizations -->
        <div class="character-table-container">
          <table class="character-table" id="character-table">
            <thead>
              <tr>
                <th>#</th>
                <th>Image</th>
                <th>Name</th>
                <th>Rarity</th>
                <th>Cost</th>
                <th>STR</th>
                <th>INT</th>
                <th>VIT</th>
                <th>AGI</th>
                <th>TEC</th>
              </tr>
            </thead>
            <tbody id="character-table-body">
              {
                HORIZON_WALKER_CHARACTERS.map((character, idx) => (
                  <tr
                    data-character-id={character.id}
                    data-url={character.detailUrl}
                    data-name={character.name}
                    data-rarity={character.rarity}
                    data-class={character.class}
                    data-element={character.element}
                    data-faction={character.faction}
                    data-tags={character.tags ? character.tags.join(', ') : ''}
                    class="clickable-row"
                  >
                    <td>{idx + 1}</td>
                    <td>
                      <div class="desktop-character-image">
                        <Image
                          src={character.image}
                          alt={character.name}
                          class="character-img"
                          width={80}
                          height={80}
                          loading="lazy"
                        />
                      </div>
                    </td>
                    <td>
                      <span class="character-name">{character.name}</span>
                    </td>
                    <td>
                      <span class="hw-badge" data-rarity={character.rarity} data-sort-key="rarity">
                        {character.rarity}
                      </span>
                    </td>
                    <td data-sort-key="cost">
                      <span class="cost-value">{character.cost}</span>
                    </td>
                    <td data-sort-key="strength">
                      <span class="stat-value">{getStrengthValue(character.stats)}</span>
                    </td>
                    <td data-sort-key="intelligence">
                      <span class="stat-value">{getIntelligenceValue(character.stats)}</span>
                    </td>
                    <td data-sort-key="vitality">
                      <span class="stat-value">{getVitalityValue(character.stats)}</span>
                    </td>
                    <td data-sort-key="agility">
                      <span class="stat-value">{getAgilityValue(character.stats)}</span>
                    </td>
                    <td data-sort-key="technic">
                      <span class="stat-value">{getTechnicValue(character.stats)}</span>
                    </td>
                  </tr>
                ))
              }
            </tbody>
          </table>
        </div>

        <!-- Mobile card view container with touch optimization -->
        <div class="mobile-card-view" id="mobile-cards-container">
          {
            HORIZON_WALKER_CHARACTERS.map(char => (
              <div
                class="mobile-character-card"
                data-character-id={char.id}
                data-slug={char.slug}
                data-url={char.detailUrl}
                data-name={char.name}
                data-rarity={char.rarity}
                data-class={char.class}
                data-element={char.element}
                data-faction={char.faction}
                data-tags={char.tags ? char.tags.join(', ') : ''}
                style="cursor:pointer; touch-action: manipulation;"
              >
                {/* Clean header section - image, name, rarity all together */}
                <div class="mobile-card-header">
                  <div class="mobile-card-image">
                    <div class="mobile-character-image">
                      <img
                        src={char.image}
                        alt={char.name}
                        class="character-img"
                        width="64"
                        height="64"
                        loading="lazy"
                      />
                    </div>
                  </div>
                  <div class="mobile-card-info">
                    <h3 class="character-name">{char.name}</h3>
                    <div class="header-badges">
                      <span class="hw-badge" data-rarity={char.rarity}>
                        {char.rarity}
                      </span>
                      <span class="cost-badge" data-type="Cost">
                        Cost: {char.cost}
                      </span>
                    </div>
                  </div>
                </div>

                {/* Clean stats grid - 5 basic stats */}
                <div class="mobile-card-stats-grid">
                  <div class="stat-item">
                    <span class="stat-label">STR</span>
                    <span class="stat-value" data-stat="strength">
                      {getStrengthValue(char.stats)}
                    </span>
                  </div>
                  <div class="stat-item">
                    <span class="stat-label">INT</span>
                    <span class="stat-value" data-stat="intelligence">
                      {getIntelligenceValue(char.stats)}
                    </span>
                  </div>
                  <div class="stat-item">
                    <span class="stat-label">VIT</span>
                    <span class="stat-value" data-stat="vitality">
                      {getVitalityValue(char.stats)}
                    </span>
                  </div>
                  <div class="stat-item">
                    <span class="stat-label">AGI</span>
                    <span class="stat-value" data-stat="agility">
                      {getAgilityValue(char.stats)}
                    </span>
                  </div>
                  <div class="stat-item">
                    <span class="stat-label">TEC</span>
                    <span class="stat-value" data-stat="technic">
                      {getTechnicValue(char.stats)}
                    </span>
                  </div>
                </div>

                {/* Gameplay Tags with categorization */}
                {char.tags && char.tags.length > 0 && (
                  <div class="mobile-card-tags">
                    <div class="tags-label">Gameplay Tags:</div>
                    <div class="tags-container">
                      {char.tags.map(tag => (
                        <span class={`character-tag ${getTagCategory(tag)}`}>{tag}</span>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <!-- Lightweight character interaction -->
  <script>
    // Simple click navigation without heavy processing
    document.addEventListener('DOMContentLoaded', () => {
      const clickableRows = document.querySelectorAll('.clickable-row');
      const mobileCards = document.querySelectorAll('.mobile-character-card');

      clickableRows.forEach(row => {
        row.addEventListener('click', () => {
          const url = row.dataset.url;
          if (url) window.location.href = url;
        });
      });

      mobileCards.forEach(card => {
        card.addEventListener('click', () => {
          const url = card.dataset.url;
          if (url) window.location.href = url;
        });
      });

      // Simple filter functionality
      const rarityFilter = document.getElementById('rarity-filter');
      if (rarityFilter) {
        rarityFilter.addEventListener('change', () => {
          const filterValue = rarityFilter.value.toLowerCase();
          const allRows = document.querySelectorAll('tbody tr');
          const allCards = document.querySelectorAll('.mobile-character-card');

          [allRows, allCards].forEach(elements => {
            elements.forEach(element => {
              const rarity = element.dataset.rarity?.toLowerCase();
              element.style.display = !filterValue || rarity === filterValue ? '' : 'none';
            });
          });
        });
      }
    });
  </script>
</CharacterLayout>
