---
import MobileCharacterNavigation from './MobileCharacterNavigation.astro';
import { HORIZON_WALKER_CHARACTERS } from '../../data/horizon-walker/characters.js';

export interface Props {
  currentCharacterSlug: string;
}

const { currentCharacterSlug } = Astro.props;

// Validate input
if (!currentCharacterSlug) {
  throw new Error('currentCharacterSlug is required');
}

// Find current character with error handling
const currentIndex = HORIZON_WALKER_CHARACTERS.findIndex(
  char => char?.slug === currentCharacterSlug
);

// Handle character not found
if (currentIndex === -1) {
  console.warn(`Character with slug '${currentCharacterSlug}' not found`);
}

// Calculate indices with proper bounds checking
const characterCount = HORIZON_WALKER_CHARACTERS.length;

// If character not found, still show navigation using first and last
let prevIndex, nextIndex;
if (currentIndex === -1) {
  // Default to showing first and last if current not found
  prevIndex = characterCount - 1; // Last character
  nextIndex = 1; // Second character
} else {
  prevIndex = currentIndex > 0 ? currentIndex - 1 : characterCount - 1;
  nextIndex = currentIndex < characterCount - 1 ? currentIndex + 1 : 0;
}

// Get characters - should always have values if we have any characters
const prevCharacter = HORIZON_WALKER_CHARACTERS[prevIndex];
const nextCharacter = HORIZON_WALKER_CHARACTERS[nextIndex];

// Show navigation if we have any characters
const hasNavigation = characterCount > 0 && prevCharacter && nextCharacter;
---

{
  hasNavigation && (
    <>
      {/* Desktop Character Navigation */}
      <nav class="hw-character-navigation desktop-only" aria-label="Character navigation">
        <div class="nav-container">
          <a
            href={`/guides/horizon-walker/characters/${prevCharacter.slug}`}
            class="nav-button prev-button"
            aria-label={`Previous character: ${prevCharacter.name}`}
          >
            <span class="nav-arrow">←</span>
            <span class="nav-text">
              <span class="nav-label">Previous</span>
              <span class="nav-character">{prevCharacter.name}</span>
            </span>
          </a>

          <a
            href="/guides/horizon-walker/characters/"
            class="nav-button center-button"
            aria-label="Back to character database"
          >
            <span class="nav-text">All Characters</span>
          </a>

          <a
            href={`/guides/horizon-walker/characters/${nextCharacter.slug}`}
            class="nav-button next-button"
            aria-label={`Next character: ${nextCharacter.name}`}
          >
            <span class="nav-text">
              <span class="nav-label">Next</span>
              <span class="nav-character">{nextCharacter.name}</span>
            </span>
            <span class="nav-arrow">→</span>
          </a>
        </div>
      </nav>

      {/* Mobile Character Navigation Component */}
      <MobileCharacterNavigation
        currentCharacterSlug={currentCharacterSlug}
        prevCharacter={prevCharacter}
        nextCharacter={nextCharacter}
      />
    </>
  )
}

<style>
  @import '../../styles/components/horizon-walker-character-navigation.css';
</style>

<script>
  // Prefetch adjacent pages for SSG
  document.addEventListener('DOMContentLoaded', () => {
    const prevLink = document.querySelector('.nav-button.prev-button') as HTMLAnchorElement | null;
    const nextLink = document.querySelector('.nav-button.next-button') as HTMLAnchorElement | null;

    // Create prefetch links in head for faster loading
    if (prevLink?.href) {
      const link = document.createElement('link');
      link.rel = 'prefetch';
      link.href = prevLink.href;
      document.head.appendChild(link);
    }

    if (nextLink?.href) {
      const link = document.createElement('link');
      link.rel = 'prefetch';
      link.href = nextLink.href;
      document.head.appendChild(link);
    }
  });
</script>
