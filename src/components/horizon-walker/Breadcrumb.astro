---
import {
  generateBreadcrumbs,
  getParentBreadcrumb,
  generateBackNavigation,
} from '../../utils/breadcrumb-generator.js';
import type { BreadcrumbItem, BackNavigation } from '../../utils/breadcrumb-generator.js';

export interface Props {
  // Manual breadcrumb items (legacy support)
  items?: Array<{
    name: string;
    href?: string;
  }>;
  // Auto-generation options
  autoGenerate?: boolean;
  gameKey?: string;
  currentPageName?: string;
  includeHome?: boolean;
  showBackButton?: boolean;
}

const {
  items,
  autoGenerate = false,
  gameKey,
  currentPageName,
  includeHome = true,
  showBackButton = true,
} = Astro.props;

// Generate breadcrumbs automatically if requested, otherwise use provided items
let breadcrumbItems: BreadcrumbItem[] = items || [];
let backNavigation: BackNavigation | null = null;

if (autoGenerate) {
  breadcrumbItems = generateBreadcrumbs(Astro.url.pathname, {
    includeHome,
    currentPageName,
    gameKey,
  });

  if (showBackButton) {
    backNavigation = generateBackNavigation(Astro.url.pathname, { gameKey });
  }
} else if (showBackButton && items) {
  // Generate back navigation from provided items
  const parent = getParentBreadcrumb(items);
  if (parent) {
    backNavigation = {
      href: parent.href || '/',
      text: `Back to ${parent.name}`,
      parentName: parent.name,
    };
  }
}
---

<nav class="hw-breadcrumb" aria-label="Breadcrumb navigation">
  <div class="hw-breadcrumb-container">
    {/* Back Button */}
    {
      backNavigation && (
        <button
          type="button"
          class="hw-back-button"
          onclick={`window.location.href='${backNavigation.href}'`}
          aria-label={backNavigation.text}
          title={backNavigation.text}
        >
          <svg
            class="hw-back-arrow"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 18l-6-6 6-6"
            />
          </svg>
          <span class="hw-back-text">Back</span>
        </button>
      )
    }

    {/* Breadcrumb Trail */}
    <ol class="hw-breadcrumb-list">
      {
        breadcrumbItems.map((item, index) => (
          <li class="hw-breadcrumb-item">
            {item.href ? (
              <a href={item.href} class="hw-breadcrumb-link">
                {item.name}
              </a>
            ) : (
              <span class="hw-breadcrumb-current" aria-current="page">
                {item.name}
              </span>
            )}
            {index < breadcrumbItems.length - 1 && (
              <span class="hw-breadcrumb-separator" aria-hidden="true">
                â†’
              </span>
            )}
          </li>
        ))
      }
    </ol>
  </div>
</nav>

<style>
  .hw-breadcrumb {
    margin-bottom: 2rem;
    /* Align with parent container */
    max-width: 75rem;
    margin-left: auto;
    margin-right: auto;
    padding-left: 2rem;
    padding-right: 2rem;
    /* Ensure breadcrumb appears above other elements */
    position: relative;
    z-index: 20;
  }

  .hw-breadcrumb-container {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  /* Back Button Styles - Horizon Walker */
  .hw-back-button {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    background: #2a2a2a;
    border: none;
    border-radius: 6px;
    color: var(--hw-primary-warm, #e8a547);
    font-size: 0.9rem;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    white-space: nowrap;
    /* Touch-friendly sizing */
    min-height: 48px;
    /* Touch optimization */
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .hw-back-button:focus-visible {
    outline: 2px solid var(--hw-primary-warm, #e8a547);
    outline-offset: 2px;
  }

  .hw-back-arrow {
    width: 1rem;
    height: 1rem;
    flex-shrink: 0;
  }

  .hw-back-text {
    font-size: 0.9rem;
  }

  /* Breadcrumb Trail Styles */
  .hw-breadcrumb-list {
    display: flex;
    gap: 0.5rem;
    list-style: none;
    padding: 0;
    margin: 0;
    color: var(--text-secondary);
    font-size: 0.9rem;
    flex-wrap: wrap;
    align-items: center;
    flex: 1;
  }

  .hw-breadcrumb-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .hw-breadcrumb-link {
    color: var(--hw-primary-warm, #e8a547);
    text-decoration: none;
    padding: 0.75rem;
    border-radius: 6px;
    /* Touch-friendly link area */
    min-height: 48px;
    display: flex;
    align-items: center;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .hw-breadcrumb-current {
    color: #ffffff;
    font-weight: 600;
    padding: 0.75rem;
  }

  .hw-breadcrumb-separator {
    color: rgba(255, 255, 255, 0.5);
    user-select: none;
    font-size: 1rem;
  }

  /* Mobile optimization */
  @media (max-width: 768px) {
    .hw-breadcrumb {
      padding-left: 1rem;
      padding-right: 1rem;
      margin-bottom: 1.5rem;
    }

    .hw-breadcrumb-container {
      gap: 1rem;
    }

    .hw-back-button {
      padding: 0.75rem 1rem;
      font-size: 0.9rem;
      min-height: 48px;
    }

    .hw-breadcrumb-list {
      font-size: 0.9rem;
    }
  }

  @media (max-width: 480px) {
    .hw-breadcrumb {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
      margin-bottom: 1rem;
    }

    .hw-breadcrumb-container {
      gap: 0.75rem;
      flex-direction: column;
      align-items: flex-start;
    }

    .hw-back-button {
      padding: 0.75rem 1rem;
      font-size: 0.85rem;
      min-height: 48px;
      width: 100%;
      justify-content: center;
    }

    .hw-breadcrumb-list {
      font-size: 0.85rem;
      gap: 0.5rem;
      width: 100%;
    }

    .hw-breadcrumb-item {
      gap: 0.5rem;
    }

    .hw-breadcrumb-link,
    .hw-breadcrumb-current {
      padding: 0.75rem;
      min-height: 48px;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .hw-back-button {
      border-color: currentColor;
    }

    .hw-breadcrumb-link {
      text-decoration: underline;
    }
  }
</style>
