---
import { getFactionData } from '../../data/zone-nova/factions.js';
import { Image } from 'astro:assets';
import Breadcrumb from '../../components/zone-nova/Breadcrumb.astro';
import {
  highlightAllSkills,
  highlightSkillText,
  defaultZNHighlightPatterns,
} from '../../utils/zone-nova/skill-highlighting.js';

interface Props {
  characterData: any;
}

const { characterData } = Astro.props;
const factionData = getFactionData(characterData.faction);

// Apply skill highlighting for better readability
const highlightedSkills = highlightAllSkills(characterData.skills, defaultZNHighlightPatterns);
const highlightedTeamSkill = characterData.teamSkill
  ? {
      ...characterData.teamSkill,
      description: highlightSkillText(
        characterData.teamSkill.description,
        defaultZNHighlightPatterns
      ),
    }
  : characterData.teamSkill;

// Apply highlighting to awakening effects
const highlightedAwakenings = characterData.awakenings
  ? characterData.awakenings.map(awakening => ({
      ...awakening,
      effect: highlightSkillText(awakening.effect, defaultZNHighlightPatterns),
    }))
  : characterData.awakenings;

// Helper function to categorize character tags for styling
function getTagCategory(tag: string): string {
  const lowerTag = tag.toLowerCase();

  // Damage/Scaling tags - Orange
  if (
    lowerTag.includes('def-scale') ||
    lowerTag.includes('hp scale') ||
    lowerTag.includes('scale') ||
    lowerTag.includes('crit rate') ||
    lowerTag.includes('crit dmg') ||
    lowerTag.includes('normal atk') ||
    lowerTag.includes('normal attack') ||
    lowerTag.includes('dot') ||
    lowerTag.includes('extra attack') ||
    lowerTag.includes('aoe') ||
    lowerTag.includes('enhanced ultimate') ||
    lowerTag.includes('penetration') ||
    lowerTag.includes('damage increase') ||
    lowerTag.includes('interrupt') ||
    lowerTag.includes('dot intake increases') ||
    lowerTag.includes('atk increase') ||
    lowerTag.includes('crit rate increase') ||
    lowerTag.includes('crit dmg increases') ||
    lowerTag.includes('atk increases') ||
    lowerTag.includes('hp-scale') ||
    lowerTag.includes('increase attack')
  ) {
    return 'damage-scaling';
  }

  // Team utility tags - Blue
  if (
    lowerTag.includes('shield') ||
    lowerTag.includes('buff') ||
    lowerTag.includes('healing') ||
    lowerTag.includes('debuff') ||
    lowerTag.includes('reduce') ||
    lowerTag.includes('inc skill cooldown') ||
    lowerTag.includes('revive') ||
    lowerTag.includes('increase max hp') ||
    lowerTag.includes('aoe healing') ||
    lowerTag.includes('stop ultimate') ||
    lowerTag.includes('revival') ||
    lowerTag.includes('reduced damage') ||
    lowerTag.includes('continuously heals') ||
    lowerTag.includes('healing damage increase') ||
    lowerTag.includes('vulnerability') ||
    lowerTag.includes('debuffer') ||
    lowerTag.includes('weakness')
  ) {
    return 'team-utility';
  }

  // Self utility tags - Green
  if (
    lowerTag.includes('damage reduction') ||
    lowerTag.includes('atk speed') ||
    lowerTag.includes('attack speed') ||
    lowerTag.includes('energy recovery') ||
    lowerTag.includes('hp consume') ||
    lowerTag.includes('cooldown reduction') ||
    lowerTag.includes('energy') ||
    lowerTag.includes('block') ||
    lowerTag.includes('speed attack')
  ) {
    return 'self-utility';
  }

  // General mechanic tags - Purple
  if (lowerTag.includes('melee') || lowerTag.includes('range')) {
    return 'general-mechanic';
  }

  // Default fallback
  return 'general-mechanic';
}
---

<!-- Breadcrumb Navigation -->
<Breadcrumb
  items={[
    { name: 'Home', href: '/' },
    { name: 'Zone Nova', href: '/guides/zone-nova/' },
    { name: 'Characters', href: '/guides/zone-nova/characters/' },
    { name: characterData.name },
  ]}
/>

<!-- Mobile navigation instruction at top of main content -->
<div class="swipeable-indicator">Touch the sides to move between characters</div>

<!-- Character Header & Overview -->
<section class="content-section character-overview-section">
  <h2 class="section-title character-overview-title">Character Overview</h2>
  <div class="character-overview-flex">
    <!-- Hero Card (Left) -->
    <div class="character-hero-card">
      <div class="character-hero-container">
        <div class="character-portrait-container">
          <Image
            src={`/images/games/zone-nova/characters/${characterData.image}.jpg`}
            alt={`${characterData.name} - ${characterData.rarity} ${characterData.class} character from Zone Nova gacha game`}
            width={300}
            height={300}
            loading="lazy"
            class="character-portrait"
          />
        </div>
        <h1 class="character-name">
          {characterData.name}
        </h1>
        <p class="character-class-info">
          {characterData.rarity}
          {characterData.class}
        </p>
        <p class="character-faction-info">
          {factionData?.name || characterData.faction}
          {factionData?.chineseName && `(${factionData.chineseName})`}
        </p>
        {
          factionData?.description && (
            <p class="character-faction-description">{factionData.description}</p>
          )
        }
      </div>

      <!-- Character Info -->
      <div class="character-info-card">
        <div class="character-info-grid">
          <div class="character-info-item">
            <div class="character-info-label">Class</div>
            <span
              class={`class-badge ${characterData.class ? characterData.class.toLowerCase() : 'unknown'}`}
              >{characterData.class || 'TBA'}</span
            >
          </div>
          <div class="character-info-item">
            <div class="character-info-label">Rarity</div>
            <span class={`rarity-badge ${characterData.rarity.toLowerCase()}`}
              >{characterData.rarity}</span
            >
          </div>
          <div class="character-info-item">
            <div class="character-info-label">Element</div>
            <span class={`element-badge ${characterData.element.toLowerCase()}`}
              >{characterData.element}</span
            >
          </div>
          <div class="character-info-item">
            <div class="character-info-label">Role</div>
            <span
              class={`role-badge ${characterData.role ? characterData.role.toLowerCase() : 'unknown'}`}
              >{characterData.role || 'TBA'}</span
            >
          </div>
          <div class="faction-section">
            <div class="character-info-label">Faction</div>
            <span
              class={`faction-badge ${(factionData?.name || characterData.faction).toLowerCase().replace(/\s+/g, '-')}`}
              style={factionData?.color
                ? `background-color: ${factionData.color}; border: 2px solid ${factionData.color}; color: white; font-weight: 700; padding: 0.5rem 1rem; border-radius: 8px; display: inline-block; box-shadow: 0 2px 8px ${factionData.color}40; text-shadow: 0 1px 2px rgba(0,0,0,0.3);`
                : 'background-color: var(--neutral-50); border: 2px solid var(--text-secondary); color: var(--text-secondary); font-weight: 700; padding: 0.5rem 1rem; border-radius: 8px; display: inline-block;'}
            >
              {factionData?.name || characterData.faction}
              {
                factionData?.chineseName && (
                  <span class="faction-chinese-name">({factionData.chineseName})</span>
                )
              }
            </span>
          </div>
        </div>
      </div>
    </div>

    <!-- Complete Stats Box (Right) -->
    <div class="character-stats-container">
      <div class="character-stats-box">
        <!-- Base Stats -->
        <h3 class="character-stats-title">Base Stats</h3>

        <!-- Core Combat Stats -->
        <h4 class="character-stats-subtitle">Core Combat Stats</h4>
        <div class="character-stats-grid">
          <div class="stat-item">
            <div class="stat-label">HP</div>
            <div class="stat-value">
              {characterData.stats.hp}
            </div>
          </div>
          <div class="stat-item">
            <div class="stat-label">Attack</div>
            <div class="stat-value">
              {characterData.stats.attack}
            </div>
          </div>
          <div class="stat-item">
            <div class="stat-label">Defense</div>
            <div class="stat-value">
              {characterData.stats.defense}
            </div>
          </div>
        </div>

        <!-- Additional Stats -->
        <h4 class="character-stats-subtitle">Additional Stats</h4>
        <div class="character-stats-grid additional-stats">
          <div class="stat-item">
            <div class="stat-label small">Energy Regen</div>
            <div class="stat-value small">0.25/s</div>
          </div>
          <div class="stat-item">
            <div class="stat-label small">Crit Rate</div>
            <div class="stat-value small">{characterData.stats?.critRate ? `${characterData.stats.critRate}%` : '0%'}</div>
          </div>
          <div class="stat-item">
            <div class="stat-label small">Crit Damage</div>
            <div class="stat-value small">50%</div>
          </div>
        </div>

        <!-- Class Section -->
        <h4 class="character-class-section character-stats-subtitle">Class</h4>
        <div class="character-class-box">
          <img
            src={`/images/games/zone-nova/classes/1${characterData.class}.jpg`}
            alt={`${characterData.class} class icon`}
            width="48"
            height="48"
            loading="lazy"
            class="character-class-icon"
          />
          <div class="character-class-content">
            <div class="character-class-badges">
              <span
                class={`class-badge ${characterData.class ? characterData.class.toLowerCase() : 'unknown'}`}
                >{characterData.class || 'TBA'}</span
              >
            </div>
            <p class="character-class-compatibility">
              Memory Compatibility: <strong class="character-class-highlight"
                >{characterData.class}</strong
              > class only
            </p>
          </div>
        </div>

        <!-- Character Tags Section -->
        {
          characterData.tags && characterData.tags.length > 0 && (
            <div class="character-tags-container">
              <div class="character-tags-label">Gameplay Tags</div>
              <div class="character-tags-wrapper">
                {characterData.tags.map((tag: string) => (
                  <span class={`character-tag ${getTagCategory(tag)}`}>{tag}</span>
                ))}
              </div>
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>

<!-- Skills Section -->
<section class="content-section skills-section">
  <h2 class="section-title">Skills</h2>

  <div class="skill-card normal-attack">
    <div class="skill-header">
      <h3 class="skill-title">
        {characterData.skills.normal.name}
      </h3>
      <span class="skill-badge normal-attack"> Normal Attack </span>
    </div>
    <p class="skill-description" set:html={highlightedSkills.normal.description} />
  </div>

  <div class="skill-card auto-skill">
    <div class="skill-header">
      <h3 class="skill-title">
        {characterData.skills.auto.name}
      </h3>
      <div class="skill-meta">
        <span class="skill-badge auto-skill"> Auto Skill </span>
        <span class="skill-cooldown">
          Cooldown: {characterData.skills.auto.cooldown}
        </span>
      </div>
    </div>
    <p class="skill-description" set:html={highlightedSkills.auto.description} />
  </div>

  <div class="skill-card ultimate">
    <div class="skill-header">
      <h3 class="skill-title">
        {characterData.skills.ultimate.name}
      </h3>
      <div class="skill-meta">
        <span class="skill-badge ultimate"> Ultimate </span>
        <span class="skill-cost">
          Cost: {characterData.skills.ultimate.energyCost}
        </span>
      </div>
    </div>
    <p class="skill-description" set:html={highlightedSkills.ultimate.description} />
  </div>

  <div class="skill-card passive">
    <div class="skill-header">
      <h3 class="skill-title">
        {characterData.skills.passive.name}
      </h3>
      <span class="skill-badge passive"> Passive </span>
    </div>
    <p class="skill-description" set:html={highlightedSkills.passive.description} />
  </div>

  <!-- Team Skill -->
  <div class="skill-card team-skill">
    <div class="skill-header">
      <h3 class="skill-title">
        {characterData.teamSkill.name}
      </h3>
      <span class="skill-badge team-skill"> Team Skill </span>
    </div>
    <p class="skill-description" set:html={highlightedTeamSkill.description} />
    <div class="team-skill-requirements">
      <strong>Requires:</strong>
      <span>
        2 {characterData.teamSkill.requirements.faction} OR 2 {
          characterData.teamSkill.requirements.element
        } characters</span
      >
    </div>
  </div>
</section>

<!-- Node Tree Section -->
<section class="content-section">
  <h2 class="section-title">Node Tree</h2>

  <!-- Node Tree Description -->
  <div class="node-tree-description">
    <div class="description-content">
      <div class="description-image">
        <img
          src="/images/games/zone-nova/nodetree/FullTree.jpg"
          alt="Complete Node Tree"
          width="120"
          height="120"
          loading="lazy"
        />
      </div>
      <div class="description-text">
        <p class="node-tree-intro">
          This is the <strong>Node Tree</strong> - there are 3 main components:
        </p>
        <ul class="node-components">
          <li>
            <strong class="highlight-amber">Skills</strong> - Level up to 10 and unlock the last 4 levels
            on Dupe 3 and 5
          </li>
          <li>
            <strong class="highlight-teal">3 Main Segments</strong> - Give the most boosts (45% HP and
            ATK total), providing massive stat increases that are very important
          </li>
          <li>
            <strong class="highlight-purple">Stat Nodes</strong> - 10 specialized nodes depending on
            the character's main kit
          </li>
        </ul>
      </div>
    </div>
  </div>

  <!-- 1. Skill Level Up -->
  <h3 class="node-section-title">1. Skill Level Up</h3>
  <p class="node-section-subtitle">
    4 types of skills that can be leveled up, Team skill don't need level up :
  </p>

  <div class="skill-levelup-section">
    <div class="skill-image">
      <img
        src="/images/games/zone-nova/nodetree/skills.jpg"
        alt="Skill Node Tree"
        width="100"
        height="100"
        loading="lazy"
      />
    </div>
    <div class="skill-content">
      <div class="skill-types-box">
        <h4 class="skill-types-title">Skill Types:</h4>
        <div class="skill-grid">
          <div class="skill-type-item">
            <div class="skill-type-name">Normal Attack</div>
          </div>
          <div class="skill-type-item auto-skill">
            <div class="skill-type-name">Auto Skill</div>
          </div>
          <div class="skill-type-item">
            <div class="skill-type-name">Ultimate</div>
          </div>
          <div class="skill-type-item passive">
            <div class="skill-type-name">Passive</div>
          </div>
          <div class="skill-type-item team-skill">
            <div class="skill-type-name">Team Skill</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- 2. ATK & HP Increase -->
  <h3 class="node-section-title">2. ATK & HP Increase</h3>
  <p class="node-section-subtitle">3 tiers of stat increases - prioritize these first!</p>

  <div class="atk-hp-nodes">
    <div class="node-tier tier-1">
      <img
        src="/images/games/zone-nova/nodetree/1.jpg"
        alt="10% ATK & HP Node"
        width="45"
        height="45"
        loading="lazy"
      />
      <div class="node-tier-content">
        <div class="node-tier-title">10% ATK & HP</div>
        <div class="node-tier-requirement">Rank 2 Required</div>
      </div>
    </div>
    <div class="node-tier tier-2">
      <img
        src="/images/games/zone-nova/nodetree/2.jpg"
        alt="15% ATK & HP Node"
        width="45"
        height="45"
        loading="lazy"
      />
      <div class="node-tier-content">
        <div class="node-tier-title">15% ATK & HP</div>
        <div class="node-tier-requirement">Rank 4 Required</div>
      </div>
    </div>
    <div class="node-tier tier-3">
      <img
        src="/images/games/zone-nova/nodetree/3.jpg"
        alt="20% ATK & HP Node"
        width="45"
        height="45"
        loading="lazy"
      />
      <div class="node-tier-content">
        <div class="node-tier-title">20% ATK & HP</div>
        <div class="node-tier-requirement">Rank 6 Required</div>
      </div>
    </div>
  </div>

  <div class="node-info-box teal">
    <p class="node-info-text">
      💡 Materials can be farmed in dungeons and weekly dungeons. These provide the most stats
      increase!
    </p>
  </div>

  <!-- 3. Stat Increase Nodes -->
  <h3 class="node-section-title">3. Stat Increase Nodes</h3>
  <p class="node-section-subtitle">
    Each character has 10 unique stat nodes. Activate 8 by level 70!
  </p>

  <div class="stat-nodes-info">
    <h4 class="stat-nodes-title">Available Stat Types:</h4>
    <div class="stat-grid">
      <div class="stat-grid-item">
        <span class="stat-grid-text">ATK Increase</span>
      </div>
      <div class="stat-grid-item">
        <span class="stat-grid-text">DEF Increase</span>
      </div>
      <div class="stat-grid-item">
        <span class="stat-grid-text">HP Increase</span>
      </div>
      <div class="stat-grid-item">
        <span class="stat-grid-text">Healing Inc</span>
      </div>
      <div class="stat-grid-item">
        <span class="stat-grid-text">Penetration</span>
      </div>
      <div class="stat-grid-item">
        <span class="stat-grid-text">Element Inc</span>
      </div>
      <div class="stat-grid-item">
        <span class="stat-grid-text">Crit Rate</span>
      </div>
      <div class="stat-grid-item">
        <span class="stat-grid-text">Crit Damage</span>
      </div>
    </div>
  </div>

  <div class="node-info-box amber">
    <p class="node-info-text">
      📋 <strong>Note:</strong> Some nodes require Level 80, others unlock earlier. Activation requirements
      are fairly simple.
    </p>
  </div>
</section>

<!-- Awakening Effects -->
<section class="content-section awakening-section">
  <h2 class="section-title">Awakening Effects</h2>
  {
    highlightedAwakenings.map((awakening, index) => (
      <div class={`awakening-card dupe-${awakening.level}`}>
        <div class="awakening-header">
          <h3 class="awakening-title">
            Dupe <span class="awakening-level-number">{awakening.level}</span>
          </h3>
        </div>
        <p class="awakening-description">
          <strong>Effect:</strong> <span set:html={awakening.effect} />
        </p>
      </div>
    ))
  }
</section>

<!-- Memory Card Section -->
<section class="content-section memory-card-section">
  <h2 class="section-title memory-card-title">
    Memory Card: {characterData.memoryCard.name}
  </h2>

  <div class="memory-card-flex">
    <!-- Memory Card Image (Left) -->
    <div class="memory-card-image-container">
      <div class="memory-card-image-box">
        <div class="memory-card-image-wrapper">
          <Image
            src={`/images/games/zone-nova/memories/${characterData.memoryCard.image}.jpg`}
            alt={characterData.memoryCard.name}
            width={200}
            height={300}
            loading="lazy"
          />
        </div>
      </div>
    </div>

    <!-- Memory Stats (Right) -->
    <div class="memory-card-stats-container">
      <div class="memory-card-stats-box">
        <h3 class="memory-card-stats-title">Memory Card Stats</h3>

        <div class="character-stats-grid">
          <div class="stat-item">
            <div class="stat-label">HP</div>
            <div class="stat-value">
              {characterData.memoryCard.stats.hp}
            </div>
          </div>
          <div class="stat-item">
            <div class="stat-label">Attack</div>
            <div class="stat-value">
              {characterData.memoryCard.stats.attack}
            </div>
          </div>
          <div class="stat-item">
            <div class="stat-label">Defense</div>
            <div class="stat-value">
              {characterData.memoryCard.stats.defense}
            </div>
          </div>
        </div>

        <!-- Memory Effects -->
        <h4 class="memory-effects-title">Memory Effects</h4>
        {
          characterData.memoryCard.effects.map(effect => (
            <div class="memory-effect-item">
              <p class="memory-effect-text">• {effect}</p>
            </div>
          ))
        }
      </div>
    </div>
  </div>

  <!-- Equipment Limitation -->
  <div class="equipment-limitation">
    <div class="equipment-limitation-content">
      <!-- Title -->
      <div class="equipment-limitation-title-container">
        <h4 class="equipment-limitation-title">⚠️ Equipment Limitation</h4>
      </div>

      <!-- Content Layout: Image Left, Text Right -->
      {
        characterData.class && (
          <div class="equipment-limitation-layout">
            {/* Image on Left */}
            <div class="equipment-limitation-image">
              <img
                src={`/images/games/zone-nova/classes/1${characterData.class}.jpg`}
                alt={characterData.class}
                width="80"
                height="80"
                loading="lazy"
              />
            </div>

            {/* Content on Right */}
            <div class="equipment-limitation-text">
              <h5 class="equipment-limitation-class">{characterData.class} Class Only</h5>
              <p class="equipment-limitation-description">
                This memory card is restricted to <strong>{characterData.class}</strong> class
                characters only.
              </p>
            </div>
          </div>
        )
      }
    </div>
  </div>
</section>

<!-- Minimal JavaScript for progressive enhancement -->
<script>
  // Lazy load images that aren't immediately visible
  if ('IntersectionObserver' in window) {
    const images = document.querySelectorAll('img[loading="lazy"]');
    const imageObserver = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const img = entry.target as HTMLImageElement;
          img.setAttribute('loading', 'eager');
          observer.unobserve(entry.target);
        }
      });
    });
    images.forEach(img => imageObserver.observe(img));
  }
</script>
