---
// @ts-nocheck
// Zone Nova Memory Page Template
// This template creates individual memory pages with complete information
import ZoneNovaLayout from '../../layouts/zone-nova/Layout.astro';
import { Image } from 'astro:assets';

// Import the memory-specific CSS
import '../../styles/games/zone-nova/zn-memory-pages.css';

export interface Props {
  memoryData: any;
  memorySEO: any;
}

const { memoryData, memorySEO } = Astro.props;

// Helper function to convert character names to URL slugs
function getCharacterUrl(characterName: string): string {
  const baseUrl = '/guides/zone-nova/characters/';

  // Handle special cases
  const specialCases: { [key: string]: string } = {
    "Jeanne d'Arc": 'jeanne-darc',
    'Greed Mammon': 'greed-mammon',
    'Snow Girl': 'snow-girl',
    'Zashiki-warashi': 'zashiki-warashi',
  };

  if (specialCases[characterName]) {
    return baseUrl + specialCases[characterName] + '/';
  }

  // Default: convert to lowercase and replace spaces with hyphens
  return baseUrl + characterName.toLowerCase().replace(/\s+/g, '-').replace(/'/g, '') + '/';
}

// Helper function to determine memory class subtitle
function getClassMemorySubtitle(effects: string[]): string {
  const effectsText = effects.join(' ').toLowerCase();

  if (effectsText.includes('only effective for guardians')) {
    return 'Guardian Class Memory Card';
  } else if (effectsText.includes('only effective for healers')) {
    return 'Healer Class Memory Card';
  } else if (effectsText.includes('only effective for disaster')) {
    return 'Disaster Class Memory Card';
  } else if (effectsText.includes('only effective for strikers')) {
    return 'Striker Class Memory Card';
  } else if (effectsText.includes('only effective for supports')) {
    return 'Support Class Memory Card';
  } else if (effectsText.includes('only effective for disruptors')) {
    return 'Disruptor Class Memory Card';
  } else if (effectsText.includes('only effective for enhancers')) {
    return 'Enhancer Class Memory Card';
  } else if (effectsText.includes('only effective for berserker')) {
    return 'Berserker Class Memory Card';
  } else if (effectsText.includes('only effective for dps')) {
    return 'DPS Class Memory Card';
  } else if (effectsText.includes('only effective for debuffer')) {
    return 'Debuffer Class Memory Card';
  } else {
    return 'Universal Memory Card';
  }
}
---

<ZoneNovaLayout
  title={memorySEO.title}
  description={memorySEO.description}
  gameTitle={`${memoryData.name} - Memory Card`}
>
  <Fragment slot="head">
    {/* Removed memory image preload to reduce memory usage */}
  </Fragment>

  <div class="memory-page">
    <!-- Premium Memory Overview Header -->
    <section class="memory-overview-premium">
      <div class="memory-hero-container">
        <!-- Memory Card Display -->
        <div class="memory-card-showcase">
          <div class="memory-card-frame">
            <Image
              src={memoryData.image}
              alt={memoryData.name}
              width={200}
              height={300}
              loading="lazy"
              class="memory-card-image-premium"
            />
            <div class="memory-card-glow"></div>
          </div>

          <!-- Rarity Badge Overlay -->
          <div class="memory-rarity-overlay">
            <span class={`memory-rarity-badge-premium ${memoryData.rarity.toLowerCase()}`}>
              {memoryData.rarity}
            </span>
          </div>
        </div>

        <!-- Memory Information Panel -->
        <div class="memory-info-panel">
          <div class="memory-header-section">
            <h1 class="memory-title-premium">{memoryData.name}</h1>
            <p class="memory-subtitle-premium">
              {
                memoryData.character
                  ? `Exclusive Memory for ${memoryData.character}`
                  : getClassMemorySubtitle(memoryData.effects)
              }
            </p>

            {
              memoryData.element && (
                <div class="memory-element-display">
                  <span class={`memory-element-badge-premium ${memoryData.element.toLowerCase()}`}>
                    {memoryData.element}
                  </span>
                </div>
              )
            }
          </div>

          <!-- Premium Stats Display -->
          <div class="memory-stats-premium">
            <h3 class="stats-section-title">Memory Stats</h3>
            <div class="memory-stats-grid-premium">
              <div class="memory-stat-premium hp">
                <div class="stat-icon">‚ù§Ô∏è</div>
                <div class="stat-info">
                  <div class="stat-label">HP</div>
                  <div class="stat-value">{memoryData.stats.hp.toLocaleString()}</div>
                </div>
              </div>
              <div class="memory-stat-premium attack">
                <div class="stat-icon">‚öîÔ∏è</div>
                <div class="stat-info">
                  <div class="stat-label">ATK</div>
                  <div class="stat-value">{memoryData.stats.attack.toLocaleString()}</div>
                </div>
              </div>
              <div class="memory-stat-premium defense">
                <div class="stat-icon">üõ°Ô∏è</div>
                <div class="stat-info">
                  <div class="stat-label">DEF</div>
                  <div class="stat-value">{memoryData.stats.defense.toLocaleString()}</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Premium Memory Effects Section -->
    <section class="memory-effects-premium">
      <div class="effects-header">
        <h2 class="effects-title-premium">Memory Effects</h2>
        <p class="effects-subtitle">Abilities granted by this memory card</p>
      </div>

      <div class="effects-content-premium">
        <ul class="effects-list-premium">
          {memoryData.effects.map(effect => <li class="effect-item-premium">{effect}</li>)}
        </ul>
      </div>
    </section>

    <!-- Premium Character Synergy Section -->
    {
      memoryData.character && (
        <section class="character-synergy-premium">
          <div class="synergy-container">
            <div class="synergy-header">
              <h2 class="synergy-title-premium">Character Synergy</h2>
              <div class="synergy-character-highlight">
                <span class="character-name-premium">{memoryData.character}</span>
                <span class="exclusive-badge">Exclusive</span>
              </div>
            </div>

            <div class="synergy-content">
              <p class="synergy-description">
                This memory card is specifically designed for{' '}
                <strong>{memoryData.character}</strong> and provides optimal synergy with their
                abilities and playstyle. The effects complement their kit perfectly for maximum
                effectiveness.
              </p>

              <a href={getCharacterUrl(memoryData.character)} class="character-guide-link-premium">
                <div class="link-icon">
                  <div class="icon-text">CHAR</div>
                </div>
                <div class="link-content">
                  <span class="link-text">View {memoryData.character} Character Guide</span>
                  <span class="link-arrow">‚Üí</span>
                </div>
              </a>
            </div>
          </div>
        </section>
      )
    }
  </div>
</ZoneNovaLayout>
